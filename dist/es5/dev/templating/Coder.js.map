{"version":3,"sources":["../../../es6/dev/templating/Coder.js"],"names":[],"mappings":"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","file":"Coder.js","sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['./DOMParser', './DOMContext'], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('./DOMParser'), require('./DOMContext'));\n    }\n}(this, function (DOMParser, DOMContext) {\n    'use strict';\n    var templId = 0,\n        _coders = [],\n        tagId = 0;\n\n\n    /**\n     *\n     * @constructor\n     * @param dOMParser\n     */\n    class Coder {\n        static    addCoder(coder) {\n            if (_coders.indexOf(coder) === -1) {\n                _coders.push(coder);\n            }\n        }\n\n        constructor(content) {\n            this.templateId = 'tid_' + new Date().valueOf() + templId;\n            var domParser = new DOMParser(content);\n            domParser.removeComments();\n            domParser.applyClass(this.templateId);\n            this._domParser = domParser;\n            this._rootEl = domParser.findOneChild();\n\n        }\n\n        getOuterHTML() {\n            return this._domParser.getOuterHTML(this._rootEl);\n        }\n\n        _compile() {\n            return {\n                children:   this._parseChildren(this._rootEl).context,\n                template:   this.getOuterHTML(),\n                templateId: this.templateId\n            };\n        }\n\n        _parseChildren(el) {\n            var nodeContext = this._prepareChild(el),\n                context = [],\n                childEl = nodeContext.getChildrenElements();\n            if (childEl && childEl.length > 0) {\n                childEl.forEach((child) => {\n                    let children = this._parseChildren(child);\n                    if (children.parsed) {\n                        context.push(children.parsed);\n                    }\n                    if (!children.parsed || !children.parsed.tagName) {\n                        context = [...context, ...children.context];\n                    }\n                });\n            }\n\n            let parsed = this._applyCoder(nodeContext);\n            if (parsed && parsed.tagName) {\n                parsed.children = context;\n            }\n            return {context, parsed};\n        }\n\n        _applyCoder(nodeContext) {\n            var parsed = false,\n                data = nodeContext.data;\n            _coders.forEach((coder) => {\n                if (nodeContext.type === coder.tagName && !parsed) {\n                    var id = 'e' + tagId++;\n\n                    nodeContext.setTag(coder.tagName);\n                    nodeContext.setPlaceholder(id, coder.noTag);\n\n                    parsed = {\n                        id:       id,\n                        tagName:  coder.tagName,\n                        data:     coder.code(nodeContext, data),\n                        template: nodeContext.outerTemplate()\n                    };\n                }\n            });\n\n            if (!parsed) {\n                var name = data.name;\n                if (name !== undefined) {\n                    let id = 'e' + tagId++;\n                    nodeContext.setAttributeValue('id', id);\n                    nodeContext.setAttributeValue('tp-name', undefined);\n                    parsed = {\n                        id:   id,\n                        data: data\n                    }\n                }\n            }\n\n            return parsed;\n        }\n\n        _prepareChild(element) {\n            return DOMContext(this, element);\n        }\n\n        run(url) {\n            this.url = url;\n            templId++;\n            return this._compile();\n        }\n\n        getText() {\n            return JSON.stringify(this.run());\n        }\n    }\n    return Coder;\n}));"]}