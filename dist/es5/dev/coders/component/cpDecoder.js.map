{"version":3,"sources":["../../../../es6/dev/coders/component/cpDecoder.js"],"names":[],"mappings":";;;;AAAA,CAAC,UAAU,IAAV,EAAgB,OAAhB,EAAyB;AACtB,QAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;;;AAG5C,eAAO,CACH,oBADG,CAAP,EAEG,OAFH,EAH4C;KAAhD,MAOO,IAAI,QAAO,yDAAP,KAAmB,QAAnB,EAA6B;;;;AAIpC,eAAO,OAAP,GAAiB,QAAQ,QAAQ,WAAR,CAAR,CAAjB,CAJoC;KAAjC;CARV,aAcO,UAAU,OAAV,EAAmB;AACvB,iBADuB;;AAEvB,QAAI,mBAAmB;AACnB,iBAAS,IAAT;AACA,gBAAS,gBAAU,IAAV,EAAgB;AACrB,gBAAI,OAAO,KAAK,IAAL,CADU;AAErB,gBAAI,WAAW;AACX,sBAAS,KAAK,IAAL;AACT,yBAAS,IAAT;AACA,uBAAS,eAAU,WAAV,EAAuB,GAAvB,EAA4B,QAA5B,EAAsC,IAAtC,EAA4C;AACjD,wBAAI,WAAW,IAAI,KAAK,GAAL,CAAS,KAAK,OAAL,EAAc,QAA3B,EAAqC,GAArC,EAA0C,IAA1C,CAAX,CAD6C;AAEjD,2BAAO,QAAP,CAFiD;iBAA5C;AAIT,sBAAS,QAAQ,EAAR;aAPT,CAFiB;AAWrB,gBAAI,KAAK,OAAL,CAAa,IAAb,KAAsB,SAAtB,EAAiC;AACjC,yBAAS,IAAT,GAAgB,KAAK,OAAL,CAAa,IAAb,CADiB;aAArC;AAGA,mBAAO,QAAP,CAdqB;SAAhB;KAFT,CAFmB;;AAsBvB,QAAI,OAAJ,EAAa;AACT,gBAAQ,UAAR,CAAmB,gBAAnB,EADS;KAAb;;AAIA,WAAO,gBAAP,CA1BuB;CAAnB,CAdR","file":"cpDecoder.js","sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // AMD. Register as an anonymous module.\n        define([\n            'templating/Decoder'\n        ], factory)\n        ;\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('./Decoder'));\n    }\n}(this, function (Decoder) {\n    'use strict';\n    var componentDecoder = {\n        tagName: 'cp',\n        decode:  function (node) {\n            var data = node.data;\n            var response = {\n                name:    data.name,\n                replace: true,\n                tmpEl:   function (placeholder, obj, children, node) {\n                    var instance = new data.src(data.dataset, children, obj, node);\n                    return instance;\n                },\n                data:    data || {}\n            };\n            if (data.dataset.bind !== undefined) {\n                response.bind = data.dataset.bind;\n            }\n            return response;\n        }\n    };\n\n    if (Decoder) {\n        Decoder.addDecoder(componentDecoder);\n    }\n\n    return componentDecoder;\n\n}));"]}