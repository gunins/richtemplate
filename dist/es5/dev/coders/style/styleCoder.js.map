{"version":3,"sources":["../../../../es6/dev/coders/style/styleCoder.js"],"names":[],"mappings":"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","file":"styleCoder.js","sourcesContent":["(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        window.less = {\n            async: true\n        }\n        define('coders/style/styleCoder',['templating/Coder', 'templating/less'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../../templating/Coder'), require('less'));\n    }\n}(this, function(Coder, less) {\n    'use strict';\n    function applyId(content, id) {\n        let classNames = getClassNames(content);\n        classNames.forEach((item)=> {\n            if (item.trim().length > 0) {\n                let names = item.split(',');\n                names.forEach((name, index)=> {\n                    let bracket = false;\n                    if (name.indexOf('{') !== -1) {\n                        name = name.replace('{', '');\n                        bracket = true;\n                    }\n                    let replace = name.trim().split(' ').map(chunk=> setName(chunk.trim(), id)).join(' ');\n                    names[index] = '\\n' + replace + ((bracket) ? ' {' : '');\n                });\n                content = content.replace(item, names.join(',')).trim() + '\\n';\n            }\n        });\n        return content;\n    }\n\n    function setName(name, id) {\n        let replace = '';\n        if (['/*', '', '*/', '>', '+', '*', '~', '>*'].indexOf(name) === -1) {\n\n            if (name.indexOf(':') !== -1) {\n                let parts = name.split(':');\n                replace = parts.shift() + '.' + id + ':' + parts.join(':');\n\n            } else {\n                replace = name + '.' + id;\n            }\n        } else if (['*', '>*'].indexOf(name) !== -1) {\n            replace = name.replace('*', '.' + id);\n        } else {\n            replace = name;\n        }\n\n        return replace;\n    }\n\n    function getClassNames(content) {\n        return content.match(/[^}]*(?=)*(\\{|$)/g);\n    }\n\n    function getMedia(content) {\n        return content.match(/(@media[^{]+\\{[\\s\\S]+?}\\s*})/g);\n    }\n\n    function getCSSFromMedia(content) {\n        let regexp = /(?:@media[^{]+\\{)([\\s\\S]+?})(?:\\s*)}/g.exec(content);\n\n        return (regexp && regexp[1]) ? regexp[1] : regexp;\n    }\n\n    function getFrames(content) {\n        return content.match(/(@(-(.+)-)?keyframes[^{]+\\{[\\s\\S]+?}\\s*})/g);\n    }\n\n    function getframeName(content) {\n        return (/@(?:-(?:.+)-)?keyframes[^{](\\w+)/g).exec(content)[1];\n    }\n\n    function removeItems(content, items) {\n        items.forEach((item)=> content = content.replace(item, ''));\n        return content;\n    }\n\n    function parseMedia(media, id) {\n        media.forEach((item, index)=> {\n            let cssFromMedia = getCSSFromMedia(item);\n            media[index] = item.replace(cssFromMedia, '\\n' + applyId(cssFromMedia, id));\n\n        });\n        return '\\n' + media.join('\\n');\n    }\n\n    function applyFrameNames(frameNames, content, id) {\n        frameNames.forEach((name)=> {\n            let regExp = new RegExp('(animation:(?:.+)?' + name + '(?:.+)?;)', 'g'),\n                match = content.match(regExp);\n            if (match && match.length > 0) {\n                match.forEach((inner)=> {\n                    let text = inner.replace('animation:', ':');\n                    text = 'animation' + text.replace(name, name + '_' + id);\n                    content = content.replace(inner, text);\n                })\n            }\n        });\n        return content;\n    }\n\n    function parseFrames(frames, id, frameNames) {\n        frames.forEach((frame, index)=> {\n            let frameName = getframeName(frame);\n            frames[index] = frame.replace(frameName, frameName + '_' + id);\n            if (frameNames.indexOf(frameName) === -1) {\n                frameNames.push(frameName);\n            }\n\n        });\n        return '\\n' + frames.join('\\n');\n    }\n\n    function parseCSS(content, id) {\n        let frameNames = [],\n            parsedFrames,\n            frames = getFrames(content);\n\n        if (frames && frames.length > 0) {\n            content = removeItems(content, frames);\n            parsedFrames = parseFrames(frames, id, frameNames);\n\n        }\n        let media = getMedia(content);\n        if (media && media.length > 0) {\n            content = removeItems(content, media);\n        }\n        content = applyId(content, id);\n\n        if (media && media.length > 0) {\n            content += parseMedia(media, id);\n        }\n\n        if (frames && frames.length > 0) {\n            content = applyFrameNames(frameNames, content, id) + parsedFrames;\n        }\n\n        return content;\n    }\n\n    // media queries /@media[^{]+\\{([\\s\\S]+?})\\s*}/g\n    // get frames   /(@(?:-webkit-|-moz-)?keyframes[^{]+\\{[\\s\\S]+?}\\s*})/g\n    //get frame name /@(?:-webkit-|-moz-)?keyframes[^{](\\w+)/g\n    let styleCoder = {\n        tagName: 'style',\n        noTag:   true,\n        code:    function(nodeContext, data) {\n            let content = nodeContext.getInnerHTML(),\n                templateId = nodeContext.templateId,\n                currentUrl,\n                importUrl = '@import-url: \"' + nodeContext.url + '\";';\n            nodeContext.removeChildren();\n\n            if (typeof exports === 'object') {\n                let dirName = __dirname.split('/'),\n                    curUrl = nodeContext.url.split('/'),\n                    root = [];\n                curUrl.forEach((url, index)=> {\n                    if (url !== dirName[index]) {\n                        root.push(url);\n                    }\n                });\n\n                currentUrl = '@current-url: \"' + root.join('/') + '\";';\n\n            } else {\n                currentUrl = '@current-url: \"' + nodeContext.url + '\";';\n            }\n            ;\n            if (typeof exports !== 'object') {\n\n                let render = less.render(importUrl + currentUrl + content, {\n                    syncImport:   true,\n                    relativeUrls: true\n                }).then((output)=> {\n                    let innerStyle = parseCSS(output.css, templateId);\n                    return innerStyle;\n                });\n                return {style: render}\n            } else {\n                let innerStyle;\n                less.render(importUrl + currentUrl + content, {\n                    syncImport:   true,\n                    relativeUrls: true\n                }, (e, output)=> {\n                    innerStyle = parseCSS(output.css, templateId);\n                    let CleanCSS = require('clean-css');\n                    innerStyle = new CleanCSS().minify(innerStyle).styles;\n                });\n                return {style: innerStyle}\n            }\n\n        }\n    };\n\n    if (Coder) {\n        Coder.addCoder(styleCoder);\n    }\n\n    return styleCoder;\n\n}));\n"]}